# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ReceiptEntity {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  buyer: UserEntity!
  product: ProductEntity!
  status: String!
  amountToBuy: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type CartItemEntity {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  product: ProductEntity!
  number: Float!
  cart: CartEntity
}

type CartEntity {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  cartItems: [CartItemEntity!]
}

type RoleEntity {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  value: String!
}

type CompanyEntity {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  creator: UserEntity!
  image: ImageEntity!
}

type UserEntity {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  phoneNumber: String!
  name: String!
  password: String!
  roles: [RoleEntity!]
  companies: [CompanyEntity!]!
  cart: CartEntity!
  receipts: [ReceiptEntity!]!
  recentlyViewedProducts: [ProductEntity!]!
  favoriteProducts: [ProductEntity!]!
  reviews: [ReviewEntity!]!
}

type CommentEntity {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  creator: UserEntity!
  text: String!
  commentToReview: ReviewEntity!
  responseToCommentCreatorName: String!
}

type ReviewEntity {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  creator: UserEntity!
  text: String!
  product: ProductEntity!
  consText: String!
  prosText: String!
  rate: Float!
  comments: [CommentEntity!]!
}

type CharacteristicValueEntity {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  value: String!
}

type CharacteristicEntity {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  values: [CharacteristicValueEntity!]!
  value: CharacteristicValueEntity!
}

type CategoryEntity {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  parentId: Float
  isMain: Boolean!
  name: String!
  value: String!
  characteristics: [CharacteristicEntity!]!
}

type ProductEntity {
  id: ID!
  confirmed: Boolean!
  category: CategoryEntity!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  price: Float!
  discountPrice: Float!
  isOnSale: Boolean!
  amountInStorage: Float!
  potentialAmountInStorage: Float!
  rating: Float!
  sumOfRates: Float!
  numberOfRates: Float!
  seller: CompanyEntity!
  characteristics: [CharacteristicEntity!]!
  textDescription: String
  popularity: Float!
  images: [ImageEntity!]
  cartItems: [CartItemEntity!]!
  reviews: [ReviewEntity!]!
}

type ImageEntity {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  url: String!
  isMain: Boolean!
}

type CartProductT {
  product: ProductEntity!
  number: Float!
}

type AuthGetMeType {
  name: String!
  id: Float!
  email: String!
  phoneNumber: String!
  roles: [RoleEntity!]!
}

type AuthType {
  token: String!
  name: String!
  id: Float!
  email: String!
  phoneNumber: String!
  roles: [RoleEntity!]!
}

type tokenT {
  token: String!
}

type GetProductsT {
  products: [ProductEntity!]!
  total: Float!
}

type Query {
  getAllUsers: [UserEntity!]!
  getUserById(getUserById: Float!): UserEntity!
  getUsersRecentlyViewed(getUsersRecentlyViewed: Float!): [ProductEntity!]!
  getUsersFavoriteProducts(getUsersFavoriteProducts: Float!): [ProductEntity!]!
  getUsersCompanies(getUsersCompanies: Float!): [CompanyEntity!]!
  getAllRoles: [RoleEntity!]!
  getCartByUserId(getCartByUserId: Float!): [CartProductT!]!
  getProductIdsInCartByUserId(getProductIdsInCartByUserId: Float!): [Float!]!
  getMe(getMe: String!): AuthGetMeType!
  getOneProduct(getOneDetailedProductById: Float!): ProductEntity!
  getAllProducts(getAllProducts: GetAllDto!): GetProductsT!
  getProductsByCategory(getProductsByCategory: Float!): [ProductEntity!]!
  filterProducts(filterProducts: ProductFilterDto!): GetProductsT!
  searchProducts(searchProducts: SearchProductsDto!): GetProductsT!
  getAllMainCategories: [CategoryEntity!]!
  getAllNotMainCategories: [CategoryEntity!]!
  getCategoryById(getCategoryById: Float!): CategoryEntity!
  getChildCategories(getChildCategories: Float!): [CategoryEntity!]!
  getCategoriesLine(getCategoriesLine: Float!): [CategoryEntity!]!
  getAllReceipts: [ReceiptEntity!]!
  getOneReceiptById(getOneReceiptById: Float!): ReceiptEntity!
  getAllReceiptsByUserId(getAllReceiptsByUserId: Float!): [ReceiptEntity!]!
  getReviews(getReviews: GetReviewsDto!): [ReviewEntity!]!
  getComments(getComments: GetCommentsDto!): [CommentEntity!]!
}

input GetAllDto {
  page: Float!
}

input ProductFilterDto {
  categoryId: Float!
  charValuesId: [String!]!
  page: Float!
  orderRule: OrderRuleT!
}

input OrderRuleT {
  fieldName: String!
  orderValue: String!
}

input SearchProductsDto {
  productName: String!
  orderRule: OrderRuleT!
  page: Float!
}

input GetReviewsDto {
  productId: Float!
  limit: Float!
  skip: Float!
}

input GetCommentsDto {
  reviewId: Float!
  skip: Float!
  limit: Float!
}

type Mutation {
  createUser(createUser: UserCreateDto!): UserEntity!
  giveAdminRole(giveAdminRole: Float!): UserEntity!
  editUserInfo(editUserInfo: UserEditDto!): tokenT!
  createRole(createRole: RoleCreateDto!): RoleEntity!
  addProductToCart(addProductToCart: AddProductToCartDto!): CartEntity!
  deleteProductFromCart(deleteProductFromCart: DeleteProductFromCartDto!): CartEntity
  changeProductNumber(changeProductNumber: ChangeProductNumberDto!): CartEntity!
  createCompany(createCompany: CompanyCreateDto!): CompanyEntity!
  createImage(createImage: ImageCreateDto!): ImageEntity!
  register(register: UserCreateDto!): AuthType!
  login(login: AuthLoginDto!): AuthType!
  createProduct(createProduct: ProductCreateDto!): ProductEntity!
  buyProduct(buyProduct: ProductBuyDto!): [ReceiptEntity!]!
  confirmProduct(confirmProduct: Float!): ProductEntity!
  addToViewedProducts(addToViewedProducts: AddToViewedProductsDto!): ProductEntity
  addToFavoriteProducts(addToFavoriteProducts: AddToViewedProductsDto!): ProductEntity
  deleteFromFavoriteProducts(deleteFromFavoriteProducts: AddToViewedProductsDto!): ProductEntity
  createCategory(createCategory: CategoryCreateDto!): CategoryEntity!
  addCharToCategory(addCharToCategory: CategoriesAddCharDto!): CategoryEntity!
  createCharacteristic(createCharacteristic: CharacteristicCreateDto!): CharacteristicEntity!
  addValueToChar(addValueToChar: CharacteristicAddValueDto!): CharacteristicEntity!
  setValueToChar(setValueToChar: CharacteristicSetValueDto!): CharacteristicEntity!
  createCharValue(createCharValue: CharacteristicValueCreateDto!): CharacteristicValueEntity!
  createReceipt(createReceipt: ReceiptCreateDto!): ReceiptEntity!
  confirmReceipt(confirmReceipt: Float!): ReceiptEntity!
  declineReceipt(declineReceipt: Float!): ReceiptEntity!
  createReview(createReview: CreateReviewDto!): ReviewEntity!
  createComment(createComment: CreateCommentDto!): CommentEntity!
}

input UserCreateDto {
  email: String!
  password: String!
  name: String!
  phoneNumber: String!
}

input UserEditDto {
  id: Float!
  name: String!
  email: String!
  phoneNumber: String!
}

input RoleCreateDto {
  name: String!
  value: String!
}

input AddProductToCartDto {
  productId: Float!
  userId: Float!
}

input DeleteProductFromCartDto {
  productId: Float!
  userId: Float!
}

input ChangeProductNumberDto {
  userId: Float!
  productId: Float!
  number: Float!
}

input CompanyCreateDto {
  name: String!
  creatorId: Float!
  image: Upload!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input ImageCreateDto {
  url: String!
  isMain: Boolean!
}

input AuthLoginDto {
  email: String!
  password: String!
}

input ProductCreateDto {
  categoryId: Float!
  name: String!
  price: Float!
  discountPrice: Float = 0
  amountInStorage: Float = 0
  sellerId: Float!
  textDescription: String
  valuesIds: [Float!]!
  images: [Upload!]!
}

input ProductBuyDto {
  buyerId: Float!
  cartItems: [CartItemT!]!
}

input CartItemT {
  productId: Float!
  number: Float!
}

input AddToViewedProductsDto {
  userId: Float!
  productId: Float!
}

input CategoryCreateDto {
  name: String!
  value: String!
  isMain: Boolean!
  parentId: Float = null
}

input CategoriesAddCharDto {
  categoryId: Float!
  characteristicId: Float!
}

input CharacteristicCreateDto {
  name: String!
}

input CharacteristicAddValueDto {
  charId: Float!
  valueId: Float!
}

input CharacteristicSetValueDto {
  charId: Float!
  valueId: Float!
}

input CharacteristicValueCreateDto {
  name: String!
  value: String!
}

input ReceiptCreateDto {
  buyerId: Float!
  productId: Float!
  amountToBuy: Float!
}

input CreateReviewDto {
  userId: Float!
  text: String!
  productId: Float!
  rate: Float!
  consText: String!
  prosText: String!
}

input CreateCommentDto {
  creatorId: Float!
  text: String!
  responseToCommentCreatorName: String = ""
  reviewId: Float = 0
}